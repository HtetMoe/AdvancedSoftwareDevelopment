Iterator Pattern Components:

	1.	Iterator: Interface or abstract class that defines methods to traverse elements,
	    such as next() and hasNext().
	2.	Concrete Iterator: Implements the Iterator interface, providing the specific traversal
	    logic for the collection.
	3.	Aggregate (or Collection): Interface that defines a method to return an iterator for its
	    elements (like createIterator()).
	4.	Concrete Aggregate: Implements the Aggregate interface and creates a Concrete Iterator
	    to traverse its elements.
	5.	Client: Uses the iterator to access the elements of the aggregate without knowing
	    its underlying structure.